import os
err_log_folder = 'err_logs/'

def divid_by_err_type():
    seen = set()
    for filename in os.listdir(err_log_folder):
        if os.path.isdir(err_log_folder + filename):
            continue
        with open(err_log_folder + filename) as fp:
            err_line = fp.readlines()[-1]
            err_type = err_line.split(' ')[0][:-1]
            if len(err_type.split('.')) == 1:
                err_type = 'Unkwon'
                # print(filename)
            if err_type in seen:
                os.rename(err_log_folder + filename, err_log_folder + err_type + '/' + filename)
            else:
                print(err_type)
                seen.add(err_type)
                os.makedirs(err_log_folder + err_type, exist_ok=True)


def divid_by_err_msg_OE():
    type_folder = 'sqlite3.OperationalError/'
    os.makedirs(err_log_folder + type_folder + 'syntax', exist_ok=True)
    os.makedirs(err_log_folder + type_folder + 'token', exist_ok=True)
    for filename in os.listdir(err_log_folder + type_folder):
        if os.path.isdir(err_log_folder + type_folder + filename):
            continue
        with open(err_log_folder + type_folder + filename) as fp:
            lines = fp.readlines()
            # print(lines[-2:])
            if 'syntax error' in ''.join(lines[-2:]):
                os.rename(err_log_folder + type_folder + filename, err_log_folder + type_folder + 'syntax/' + filename)
            elif 'unrecognized' in ''.join(lines[-2:]):
                os.rename(err_log_folder + type_folder + filename, err_log_folder + type_folder + 'token/' + filename)
            else:
                pass


if __name__ == '__main__':
    # divid_by_err_type()
    divid_by_err_msg_OE()