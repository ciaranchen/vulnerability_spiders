# -*- coding: utf-8 -*-
import scrapy
from scrapy.http import Request
from scrapy.spiders import CrawlSpider, Rule
from scrapy.linkextractors import LinkExtractor
from cnnvd.items import CnnvdItem
class VulnerabilitySpider(CrawlSpider):
    name = "Cnnvd"
    allowed_domains = ["www.cnnvd.org.cn"]
    start_urls = ['http://www.cnnvd.org.cn/web/vulnerability/querylist.tag']
    rules =(
        # Rule(LinkExtractor(allow=("web/xxk/ldxqById.tag")), callback="parse_item"),
    )

    def parse(self, response):
        self.logger.info(response.url)
        nvd_urls = LinkExtractor(allow=("web/xxk/ldxqById.tag")).extract_links(response)
        for url in nvd_urls:
            yield Request(url=url.url, callback=self.parse_item)

        js_jump = response.xpath("//a[@class='page_a']/following-sibling::a[position()<=last()-2]/@onclick").extract()
        for url in js_jump:
            u = 'http://' + self.allowed_domains[0] + url.strip('queryld(\'').strip('&repairLd=\')')
            yield Request(url=u, callback=self.parse)
        return super().parse(response)

    def parse_item(self, response):
        self.logger.info(response.url)
        item =  CnnvdItem()

        # from details
        details = response.xpath("//div[@class='detail_xq w770']")
        # print(details)
        item['vulnerability_name'] = details.xpath("h2/text()").extract()
        
        item['CNNVD_id'] = details.xpath("ul/li[1]/span/text()").extract()
        item['vulnerability_level'] = details.xpath("ul/li[2]/span/text()").extract()
        item['CVE_id'] = details.xpath("ul/li[3]/span/text()").extract()

        item['vulnerability_type'] = details.xpath("ul/li[4]/span/text()").extract()
        item['release_time'] = details.xpath("ul/li[5]/span/text()").extract()
        item['threat_type'] = details.xpath("ul/li[6]/span/text()").extract()
        item['update_time'] = details.xpath("ul/li[7]/span/text()").extract()
        item['vulnerability_company'] = details.xpath("ul/li[8]/span/text()").extract()
        item['vulnerability_source'] = details.xpath("ul/li[9]/span/text()").extract()

        # from other section
        item['vulnerability_description'] = response.xpath("/html/body/div[4]/div/div[1]/div[3]/p/text()").extract()
        item['vulnerability_notice'] = response.xpath("/html/body/div[4]/div/div[1]/div[4]/p/text()").extract()
        item['vulnerability_reference'] = response.xpath("/html/body/div[4]/div/div[1]/div[5]/p/text()").extract()
        item['vulnerability_entity'] = response.xpath("/html/body/div[4]/div/div[1]/div[6]/p/text()").extract()
        item['vulnerability_protection'] = response.xpath("/html/body/div[4]/div/div[1]/div[7]/ul").extract()

        for k in item:
            if isinstance(item[k], list):
                item[k] = ''.join(item[k])
        # print(item)

        return item
